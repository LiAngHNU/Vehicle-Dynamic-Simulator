PARSFILE
! VS Road Calculator
! Utility to calculate road and path coordinates for visualization
! Revision 143773, June 25, 2020

TITLE Default data set

! Echo: Roads\3D_Road\Road_32c6b5d6-4597-4095-bd25-d037bf3262eb_echo.par
! This run was made 11:25 on June 29, 2020.

!------------------------------------------------------------------------------------
! SYSTEM PARAMETERS (SIMULATION OPTIONS)
!------------------------------------------------------------------------------------
! [D] (default) indicates that a parameter was not set by reading from a Parsfile.
! [I] indicates that changing the parameter via an Event triggers an initialization.
! [L] indicates that the parameter is locked once the simulation starts.

ID_EVENT            0 ; - ! ID number that can be assigned to the current event
ID_RUN              0 ; - ! ID number that can be assigned to a simulation run
IPRINT              1 ! Print interval: output time step TSTEP_WRITE = TSTEP*IPRINT;
                      ! set IPRINT = 0 for debug (TSTEP_WRITE = T_DT) [L]
NDIGITS_ECHO       10 ! [D] Max. no. of digits for printing floating-point numbers
! NIMPORT           0 ! Number of variables activated for import (read only)
! NOUT_ANI_LIVE     3 ! Number of variables sent live to animators (read only)
! NOUT_EXPORT       0 ! Number of output variables activated for export (read only)
! NOUT_WRITE        3 ! Number of output variables written to file (read only)
OPT_ALL_WRITE       0 ! Write all outputs to file? 1 -> all, 0 -> only activated
                      ! outputs
OPT_BUFFER_WRITE    0 ! [D] Retain output data in memory buffer until end of run? 0
                      ! -> no, write immediately to file, 1 -> yes, buffer during
                      ! run and write to file after run finishes [L]
OPT_CHECK_MATH      2 ! [D] Check for math exceptions? 2 -> as errors, 1 -> as
                      ! warnings, 0 -> no checks
OPT_ECHO_ALL_PARS   0 ! [D] Echo all parameters in this VS Solver? 0 -> no, 1 -> yes
OPT_ECHO_ALL_UNITS  0 ! [D] Echo list of units and scale factors? 0 -> no, 1 -> yes
OPT_ECHO_ANI_LIVE   0 ! [D] Echo variables sent live to video? 0 -> no, 1 -> yes
OPT_ECHO_ICS        0 ! [D] Echo initial conditions? 0 -> no, 1 -> yes
OPT_ECHO_KEYWORDS_LC 0 ! [D] Echo all keywords in lowercase? 0 -> no, 1 -> yes
OPT_ECHO_WRITE      0 ! [D] Echo written outputs? 0 -> no, 1 -> yes
OPT_ERROR_DIALOG    0 ! Show pop-up dialog box if fatal error occurs: 1 -> yes
                      ! (normal use), 0 -> no (for batch runs)
OPT_ERROR_DUP_DEF   0 ! [D] Handle case where DEFINE_IMPORT, DEFINE_OUTPUT,
                      ! DEFINE_PARAMETER, or DEFINE_VARIABLE attempts to define a
                      ! variable with a name that is already in use. 0 -> write
                      ! warning in log file, 1 -> generate error [L]
OPT_ERROR_SHOW_ALL  0 ! [D] Show pop-up boxes for all errors: 0 -> only show the
                      ! first, 1 -> also show subsequent errors
OPT_LOG_DEBUG       0 ! [D] Log file writing: 0 -> normal, 1 -> crash expected
OPT_LOG_VERBOSE     2 ! [D] Log file verbosity: 2 -> errors + most events + parsfile
                      ! names, 0 -> errors only, 1 -> errors + events, 3 ->
                      ! advanced diagnostics
OPT_LOG_WARNINGS    1 ! [D] Write warnings into log file? 1 -> yes, 0 -> no
OPT_PAUSE           0 ! [D] Pause at end of run with window open? 0 -> no, 1 -> yes
OPT_SKIP_INIT_DYN   0 ! [D] Skip initial dynamic calculations (for some RT systems)?
                      ! 0 -> no, 1 -> yes
OPT_SORT_WRITE      1 ! [D] Sort written outputs? 1 -> alphabetical, 0 -> as entered
OPT_STOP            0 ! [D] Option for stopping the run: 0 -> stop when T reaches
                      ! TSTOP; 1 -> stop when T reaches TSTOP or station reaches
                      ! SSTOP; -1 -> run until stopped using VS Commands or
                      ! external control
OPT_VS_FILETYPE     1 ! [D] Type of output file: 1-> 64-bit VS, 2-> 32-bit VS, 3 ->
                      ! 32-bit ERD, 4 -> text CSV (no binary), 0 -> no output file
OPT_WRITE           0 ; - ! Write outputs when T > TSTART_WRITE? 1 -> write, 0 ->
                      ! don't write; change this using VS Commands or Events
TSTART          12.96 ; s ! Starting time for the simulation clock
TSTART_T_EVENT      0 ; s ! [D] Event clock reset time: T_EVENT = T - TSTART_T_EVENT
TSTART_WRITE        0 ; s ! [D] Start writing outputs when this time is reached
TSTEP            0.04 ; s ! Time step for numerical integration [L]
! TSTEP_WRITE    0.04 ; s ! CALC -- Time interval in output time-series file
TSTOP         12.9596 ; s ! Stop when this time is reached
! T_DT           0.04 ; s ! CALC -- Time increment between calculations

!------------------------------------------------------------------------------------
! SYSTEM CONSTANTS
!------------------------------------------------------------------------------------
! DR      57.29577951 ; - ! Deg/rad symbol to use in formulas (read-only)
! G           9.80665 ; - ! Symbol for gravity constant m/s/s (read-only)
! PI      3.141592654 ; - ! Symbol for PI to use in formulas (read-only)
! ZERO              0 ; - ! Symbol for zero to use in VS Events (read-only)

!------------------------------------------------------------------------------------
! REFERENCE PATHS
!------------------------------------------------------------------------------------
! Up to 500 reference paths may be installed to provide station-based coordinate
! systems used to define 3D road surfaces, targets for the driver model, and
! positions of moving objects. In addition to the parameters shown in this section,
! the paths may include spline X-Y tables (keyword = SEGMENT_XY_TABLE).

! NPATH             1 ! Number of installed paths available for roads, driver model,
                      ! and moving objects (read only)
DEFINE_PATHS        1 ! VS Command to install reference paths

PATH_ID(1)          1 ! [D] ID number for this Reference Path
OPT_PATH_START(1)   1 ! Set initial heading and X-Y coordinates of the path? 0 -> no
                      ! (legacy, using table data), 1 -> yes
OPT_PATH_LOOP(1)    1 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(1)      0 ; m ! [D] Station at the start of this path
! SPATH_LAP(1) 1047.197551 ; m ! CALC -- Lap distance for this path
HEADING_START(1)    0 ; deg ! [D] Heading at the start of this path
X_PATH_START(1)     0 ; m ! [D] Global X coordinate at the start of this path
Y_PATH_START(1)     0 ; m ! [D] Global Y coordinate at the start of this path

NSEGMENTS(1)        4 ! Number of segments in this path
SEGMENT_TYPE(1,1)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,1) 100 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,1)   60 ; deg ! Central angle of arc
! S_SEGMENT_END(1,1) 104.7197551 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,1) 86.60254038 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,1) 50 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,1) 60 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,2)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,2) -100 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,2)  240 ; deg ! Central angle of arc
! S_SEGMENT_END(1,2) 523.5987756 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,2) 173.2050808 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,2) -100 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,2) -180 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,3)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,3) 100 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,3)   60 ; deg ! Central angle of arc
! S_SEGMENT_END(1,3) 628.3185307 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,3) 86.60254038 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,3) -150 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,3) -120 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,4)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,4) -100 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,4)  240 ; deg ! Central angle of arc
! S_SEGMENT_END(1,4) 1047.197551 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,4) -1.98951966e-13 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,4) -8.526512829e-14 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,4) 6.997220299e-14 ; deg ! CALC -- Heading at end of segment

!------------------------------------------------------------------------------------
! ROAD SURFACES
!------------------------------------------------------------------------------------
! Road surfaces define elevation Z and friction MU as functions of global X and Y
! coordinates, using a station-based coordinate system defined with a Reference
! Path. Up to 200 surfaces may be installed to represent sections, intersections,
! multiple lanes, etc. The Z, MU, and RR_SURF values for a road surface are
! provided with Configurable Functions MU_ROAD, ROAD_DZ, RR_SURF, and ROAD_ZS.
! Boundaries that control automatic switching from one road surface to another make
! use of the Configurable Functions ROAD_L_BOUNDARY, ROAD_NEW_ID, and ROAD_NEW_S.

! NROAD             1 ! Number of installed road surfaces (read only)
NROAD_DZ            1 ! Number of ROAD_DZ datasets
DEFINE_ROADS        1 ! VS Command to define road surfaces
CURRENT_ROAD_ID     1 ! ROAD_ID for the vehicle during initialization [I]

ROAD_ID(1)          1 ! [D] ID number for this road
ROAD_PATH_ID(1)     1 ! PATH_ID of reference path used for this road [I]
ROAD_SMAX_NEW_ID(1) 0 ! [D] 0 -> No SMAX limit, -1 -> stop if S > ROAD_SMAX, > 0 ->
                      ! switch to road with this ID if S > ROAD_SMAX
ROAD_SMIN_NEW_ID(1) 0 ! [D] 0 -> No SMIN limit, -1 -> stop if S < ROAD_SMIN, > 0 ->
                      ! switch to road with this ID if S < ROAD_SMIN
ROAD_N_DZ(1)        1 ! Number of ROAD_DZ layers added to the surface
RD_DZ_ID(1,1)       1 ! ROAD_DZ_ID for a ROAD_DZ layer added to this surface

!------------------------------------------------------------------------------------
! START AND STOP INFORMATION FOR PATH
!------------------------------------------------------------------------------------
N_LTARG             0 ! [D] Number of LTARG datasets that are used in this run
PATH_ID_DM          1 ! PATH_ID of reference path for the driver and vehicle [I]
LTARG_ID_DM         0 ! [D] LTARG_ID of reference LTARG for the driver model (0 ->
                      ! no reference LTARG)
OPT_INIT_PATH       1 ! [D] Set Xo, Yo, and Yaw to match path PATH_ID_DM and target
                      ! LTARG_ID_DM at station SSTART? 1 -> yes, 0 -> no [I]
OPT_DIRECTION       1 ! Travel direction along path PATH_ID_DM: 0 -> set to 1 or -1
                      ! using SSTART and SSTOP values (legacy); 1 -> increasing
                      ! station, -1 -> decreasing station [I]
SSTART              0 ; m ! [D] Start the vehicle at this station on path PATH_ID_DM
                      ! and possibly with target LTARG_ID_DM. The current station
                      ! on this path is the output variable "Station", which is
                      ! also a state variable. [I]

!------------------------------------------------------------------------------------
! CONFIGURABLE FUNCTIONS
!------------------------------------------------------------------------------------

! MU_ROAD: Tire/road friction coefficient (MU) for a road surface. Use MU = -1 for
! original tire data (no scaling). MU can be a nonlinear CARPET function of lateral
! position and station or a function of station (CONSTANT or TABLE) combined with a
! function MU_ROAD_L of lateral position (CONSTANT or TABLE). Alternatively, a custom
! equation can be defined at runtime. MU from the calculation can be adjusted with
! MU_ROAD_GAIN and MU_ROAD_OFFSET. Station used in the calculation can be adjusted
! with SSCALE_MU_ROAD and SSTART_MU_ROAD. Lateral position used in the calculation
! can be adjusted with L_SCALE_MU_ROAD and L_START_MU_ROAD. This configurable
! function supports 200 datasets; if indices shown below are not used, e.g., (2), the
! current value of the index IROAD is used to identify the dataset when reading data.

! 2D table: row 1 has "0" (place holder) followed by 4 values of lateral position
! (m). Other rows have station (m) followed by 4 values of MU (-).
MU_ROAD_CARPET(1) 2D_LINEAR
 0, -10, -0.1, 0.1, 10
 0, 1, 1, 1, 1
 104.718426, 1, 1, 1, 1
 523.59213, 1, 1, 1, 1
 628.310556, 1, 1, 1, 1
 1047.197551, 1, 1, 1, 1
ENDTABLE
MU_ROAD_GAIN(1)     1 ! Gain multiplied with calculated value to get MU
MU_ROAD_OFFSET(1)   0 ; - ! Offset added (after gain) to get MU
SSTART_MU_ROAD(1)   0 ; m ! Offset subtracted from station
SSCALE_MU_ROAD(1)   1 ! Scale factor divided into (station - SSTART_MU_ROAD)
L_START_MU_ROAD(1)  0 ; m ! Offset subtracted from lateral position
L_SCALE_MU_ROAD(1)  1 ! Scale factor divided into (lateral position -
                      ! L_START_MU_ROAD)

! ROAD_DZ: Incremental elevation added to a road surface. DZ can be a nonlinear
! CARPET function of lateral position and station or a function of station (CONSTANT,
! COEFFICIENT, or TABLE) combined with a function ROAD_DZ_L of lateral position
! (CONSTANT, COEFFICIENT, or TABLE). DZ from the calculation can be adjusted with
! ROAD_DZ_GAIN and ROAD_DZ_OFFSET. Station used in the calculation can be adjusted
! with SSCALE_ROAD_DZ and SSTART_ROAD_DZ. Lateral position used in the calculation
! can be adjusted with L_SCALE_ROAD_DZ and L_START_ROAD_DZ. The derivative of this
! function is used internally. This configurable function supports 200 datasets; if
! indices shown below are not used, e.g., (2), the current value of the index
! IROAD_DZ is used to identify the dataset when reading data.

ROAD_DZ_ID(1)       1  ! User-defined ID number for this dataset

! 2D table: row 1 has "0" (place holder) followed by 4 values of lateral position
! (m). Other rows have station (m) followed by 4 values of dZ (m).
ROAD_DZ_CARPET(1) 2D_LINEAR
 0, -5, -4, 4, 5
 0, 0, 0, 0, 0
 30, 1.2, 1.2, -1.2, -1.2
 74.718426, 1.2, 1.2, -1.2, -1.2
 134.718426, -1.2, -1.2, 1.2, 1.2
 493.59213, -1.2, -1.2, 1.2, 1.2
 553.59213, 1.2, 1.2, -1.2, -1.2
 598.310556, 1.2, 1.2, -1.2, -1.2
 658.310556, -1.2, -1.2, 1.2, 1.2
 1017.197551, -1.2, -1.2, 1.2, 1.2
 1047.197551, 0, 0, 0, 0
ENDTABLE
ROAD_DZ_GAIN(1)     1 ! Gain multiplied with calculated value to get dZ
ROAD_DZ_OFFSET(1)   0 ; m ! Offset added (after gain) to get dZ
SSTART_ROAD_DZ(1)   0 ; m ! Offset subtracted from station
SSCALE_ROAD_DZ(1)   1 ! Scale factor divided into (station - SSTART_ROAD_DZ)
L_START_ROAD_DZ(1)  0 ; m ! Offset subtracted from lateral position
L_SCALE_ROAD_DZ(1)  1 ! Scale factor divided into (lateral position -
                      ! L_START_ROAD_DZ)

! ROAD_NEW_ID: Left/right boundary: 0 -> no boundary, -1 stop when L reaches
! boundary, > 0 ID of adjacent road. ID is a function of S (CONSTANT, COEFFICIENT, or
! TABLE). Alternatively, a custom equation can be defined at runtime. ID from the
! calculation can be adjusted with ROAD_NEW_ID_GAIN and ROAD_NEW_ID_OFFSET. S used in
! the calculation can be adjusted with SSCALE_ROAD_NEW_ID and SSTART_ROAD_NEW_ID.
! This configurable function supports 400 datasets; if indices shown below are not
! used, e.g., (1,2), the current values of the indices IROAD and ISIDE are used to
! identify the dataset when reading data.

ROAD_NEW_ID_CONSTANT(1,1) 0 ; - ! [D] Constant ID, Road 1, left side boundary
ROAD_NEW_ID_OFFSET(1,1) 0 ; - ! Offset added (after gain) to get ID

ROAD_NEW_ID_CONSTANT(1,2) 0 ; - ! [D] Constant ID, Road 1, right side boundary
ROAD_NEW_ID_OFFSET(1,2) 0 ; - ! Offset added (after gain) to get ID

! ROAD_ZS: Road elevation component related only to road station S. Elevation is a
! function of station (CONSTANT, COEFFICIENT, or TABLE). Elevation from the
! calculation can be adjusted with ROAD_ZS_GAIN and ROAD_ZS_OFFSET. Station used in
! the calculation can be adjusted with SSCALE_ROAD_ZS and SSTART_ROAD_ZS. The
! derivative of this function is used internally. This configurable function supports
! 200 datasets; if indices shown below are not used, e.g., (2), the current value of
! the index IROAD is used to identify the dataset when reading data.

! 1D table: col 1 = station (m), col 2 = elevation (m)
ROAD_ZS_TABLE(1) SPLINE ! spline interpolation and extrapolation
 0, -2.750677785
 0.001, -2.750602761
 3, -2.518353839
 6, -2.2725204
 9, -2.014681541
 12, -1.746341337
 15, -1.469003861
 18, -1.184173188
 21, -0.8933533909
 24, -0.5980485447
 27, -0.2997627233
 30, 0
 34.4718426, 0.4471842598
 38.9436852, 0.8943685196
 43.41552779, 1.341552779
 47.88737039, 1.788737039
 52.35921299, 2.235921299
 56.83105559, 2.683105559
 61.30289819, 3.130289819
 65.77474078, 3.577474078
 70.24658338, 4.024658338
 74.71842598, 4.471842598
 77.71842598, 4.771605321
 80.71842598, 5.069891143
 83.71842598, 5.365195989
 86.71842598, 5.656015786
 89.71842598, 5.940846459
 92.71842598, 6.218183935
 95.71842598, 6.486524139
 98.71842598, 6.744362998
 101.718426, 6.990196437
 104.718426, 7.222520383
 107.718426, 7.43983076
 110.718426, 7.640623496
 113.718426, 7.823394516
 116.718426, 7.986639745
 119.718426, 8.128855111
 122.718426, 8.248536538
 125.718426, 8.344179954
 128.718426, 8.414281283
 131.718426, 8.457336451
 134.718426, 8.471842598
 170.6057964, 8.471842598
 206.4931668, 8.471842598
 242.3805372, 8.471842598
 278.2679075, 8.471842598
 314.1552779, 8.471842598
 350.0426483, 8.471842598
 385.9300187, 8.471842598
 421.8173891, 8.471842598
 457.7047595, 8.471842598
 493.5921299, 8.471842598
 496.5921299, 8.457336451
 499.5921299, 8.414281283
 502.5921299, 8.344179954
 505.5921299, 8.248536538
 508.5921299, 8.128855111
 511.5921299, 7.986639745
 514.5921299, 7.823394516
 517.5921299, 7.640623496
 520.5921299, 7.43983076
 523.5921299, 7.222520383
 526.5921299, 6.990196437
 529.5921299, 6.744362998
 532.5921299, 6.486524139
 535.5921299, 6.218183935
 538.5921299, 5.940846459
 541.5921299, 5.656015786
 544.5921299, 5.365195989
 547.5921299, 5.069891143
 550.5921299, 4.771605321
 553.5921299, 4.471842598
 558.0639725, 4.024658338
 562.5358151, 3.577474078
 567.0076577, 3.130289819
 571.4795003, 2.683105559
 575.9513429, 2.235921299
 580.4231855, 1.788737039
 584.8950281, 1.341552779
 589.3668707, 0.8943685196
 593.8387133, 0.4471842598
 598.3105559, 1.16351373e-13
 601.3105559, -0.2997627233
 604.3105559, -0.5980485447
 607.3105559, -0.8933533909
 610.3105559, -1.184173188
 613.3105559, -1.469003861
 616.3105559, -1.746341337
 619.3105559, -2.014681541
 622.3105559, -2.2725204
 625.3105559, -2.518353839
 628.3105559, -2.750677785
 631.3105559, -2.967988162
 634.3105559, -3.168780898
 637.3105559, -3.351551918
 640.3105559, -3.514797147
 643.3105559, -3.657012513
 646.3105559, -3.77669394
 649.3105559, -3.872337356
 652.3105559, -3.942438684
 655.3105559, -3.985493853
 658.3105559, -4
 694.1992554, -4
 730.0879549, -4
 765.9766545, -4
 801.865354, -4
 837.7540535, -4
 873.6427531, -4
 909.5314526, -4
 945.4201521, -4
 981.3088517, -4
 1017.197551, -4
 1020.197551, -3.985493853
 1023.197551, -3.942438684
 1026.197551, -3.872337356
 1029.197551, -3.77669394
 1032.197551, -3.657012513
 1035.197551, -3.514797147
 1038.197551, -3.351551918
 1041.197551, -3.168780898
 1044.197551, -2.967988162
 1047.196551, -2.750752807
 1047.197551, -2.750677785
ENDTABLE
ROAD_ZS_GAIN(1)     1 ! Gain multiplied with calculated value to get elevation
ROAD_ZS_OFFSET(1)   0 ; m ! Offset added (after gain) to get elevation
SSTART_ROAD_ZS(1)   0 ; m ! Offset subtracted from station
SSCALE_ROAD_ZS(1)   1 ! Scale factor divided into (station - SSTART_ROAD_ZS)

! RR_SURF: Tire/road rolling resistance surface-effect coefficient. RR_SURF can be a
! nonlinear CARPET function of lateral position and station or a function of station
! (CONSTANT or TABLE) combined with a function RR_SURF_L of lateral position
! (CONSTANT or TABLE). Alternatively, a custom equation can be defined at runtime.
! RR_SURF from the calculation can be adjusted with RR_SURF_GAIN and RR_SURF_OFFSET.
! Station used in the calculation can be adjusted with SSCALE_RR_SURF and
! SSTART_RR_SURF. Lateral position used in the calculation can be adjusted with
! L_SCALE_RR_SURF and L_START_RR_SURF. This configurable function supports 200
! datasets; if indices shown below are not used, e.g., (2), the current value of the
! index IROAD is used to identify the dataset when reading data.

RR_SURF_CONSTANT(1) 1 ; - ! Constant RR_SURF component due to station
RR_SURF_GAIN(1)     1 ! Gain multiplied with calculated value to get RR_SURF
RR_SURF_OFFSET(1)   0 ; - ! Offset added (after gain) to get RR_SURF
RR_SURF_COMBINE(1) MULTIPLY ! How to combine the two components
RR_SURF_L_CONSTANT(1) 1 ; - ! [D] Constant RR_SURF component due to lateral position


END
