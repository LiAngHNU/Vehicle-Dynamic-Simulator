PARSFILE
! Suspension roll stiffness measuring system kinematic simulation.
! Generated by VS Lisp (rev 39765). (c) 2008 - 2017. Mechanical Simulation Corporation.
! This solver program was created on July 11, 2018.

TITLE Default data set

! Echo: Suspensions\Mx_Total\MxTot_224a6fbe-c5f4-4590-8940-806a6d62570c_echo.par
! This run was made 10:38 on June 29, 2020.

!------------------------------------------------------------------------------------
! SYSTEM PARAMETERS (SIMULATION AND MODEL OPTIONS)
!------------------------------------------------------------------------------------
! [D] (default) indicates that a parameter was not set by reading from a Parsfile.
! [I] indicates that changing the parameter via an Event triggers an initialization.
! [L] indicates that the parameter is locked once the simulation starts.

ID_EVENT            0 ; - ! ID number that can be assigned to the current event
ID_RUN              0 ; - ! ID number that can be assigned to a simulation run
NDIGITS_ECHO       10 ! [D] Max. no. of digits for printing floating-point numbers
! NIMPORT           0 ! Number of variables activated for import (read only)
! NOUT_ANI_LIVE     0 ! Number of variables sent live to animators (read only)
! NOUT_EXPORT       0 ! Number of output variables activated for export (read only)
! NOUT_WRITE        0 ! Number of output variables written to file (read only)
OPT_ALL_WRITE       0 ! Write all outputs to file? 1 -> all, 0 -> only activated
                      ! outputs
OPT_BUFFER_WRITE    0 ! [D] Use buffer for outputs written to file? 0 -> no, write
                      ! during run, 1 -> yes, write after run finishes [L]
OPT_CHECK_MATH      2 ! [D] Check for math exceptions? 2 -> as errors, 1 -> as
                      ! warnings, 0 -> no checks
OPT_ECHO_ALL_PARS   0 ! [D] Echo all parameters in this VS Solver? 0 -> no, 1 -> yes
OPT_ECHO_ALL_UNITS  0 ! [D] Echo list of units and scale factors? 0 -> no, 1 -> yes
OPT_ECHO_ICS        0 ! [D] Echo initial conditions? 0 -> no, 1 -> yes
OPT_ECHO_KEYWORDS_LC 0 ! [D] Echo all keywords in lowercase? -> 0 -> no, 1 -> yes
OPT_ENABLE_PYTHON   0 ! [D] Enable access to embedded Python? 1 -> yes, 0 -> no
OPT_ERROR_DIALOG    1 ! [D] Show pop-up dialog box if fatal error occurs: 1 -> yes
                      ! (normal use), 0 -> no (for batch runs)
OPT_ERROR_DUP_DEF   0 ! [D] Handle case where DEFINE_IMPORT, DEFINE_OUTPUT,
                      ! DEFINE_PARAMETER, or DEFINE_VARIABLE attempts to define a
                      ! variable that already exists. 0 -> write warning in log
                      ! file, 1 -> generate error and stop the run [L]
OPT_ERROR_SHOW_ALL  0 ! [D] Show pop-up boxes for all errors: 0 -> only show the
                      ! first, 1 -> also show subsequent errors
OPT_INT_METHOD      0 ! Numerical integration method: 0 -> AB-2; 1 -> RK-2; 2 ->
                      ! AM-2; 3 -> AM-3; 4 -> AM-4; -1 -> Euler. AB-2 and Euler are
                      ! full-step methods (TSTEP = 0.0005s is typical); AM and RK-2
                      ! use half-steps (TSTEP = 0.001s is typical, i.e., half-step
                      ! = 0.0005s) [L]
OPT_LINEARIZATION   0 ! [D] Numerical linearization applied for: 0 -> all ODEs of
                      ! the model, 1 -> only selected derivatives [I]
OPT_LOG_DEBUG       0 ! [D] Log file writing: 0 -> normal, 1 -> crash expected
OPT_LOG_VERBOSE     2 ! [D] Log file verbosity: 2 -> errors + most events + parsfile
                      ! names, 0 -> errors only, 1 -> errors + events, 3 ->
                      ! advanced diagnostics
OPT_LOG_WARNINGS    1 ! [D] Write warnings into log file? 1 -> yes, 0 -> no
OPT_PAUSE           0 ! [D] Pause at end of run with window open? 0 -> no, 1 -> yes
OPT_SKIP_INIT_DYN   0 ! [D] Skip initial dynamic calculations (for some RT systems)?
                      ! 0 -> no, 1 -> yes
OPT_STOP           -1 ! Option for stopping the run: 0 -> stop when T reaches TSTOP,
                      ! -1 -> run until stopped using VS commands or external
                      ! control
OPT_VS_FILETYPE     3 ! Type of output file: 3 -> 32-bit ERD, 1-> 64-bit VS, 2->
                      ! 32-bit VS, 4 -> text CSV (no binary), 0 -> no output file
OPT_WRITE           1 ; - ! [D] Write outputs when T > TSTART_WRITE? 1 -> write, 0
                      ! -> don't write; change this using VS Commands or Events
TSTART              0 ; s ! [D] Starting time for the simulation clock
TSTART_T_EVENT      0 ; s ! [D] Event clock reset time: T_EVENT = T - TSTART_T_EVENT
TSTART_WRITE        0 ; s ! [D] Start writing outputs when this time is reached
TSTEP          0.0005 ; s ! [D] Time step for numerical integration [L]
! T_DT         0.0005 ; s ! CALC -- Time increment between calculations

!------------------------------------------------------------------------------------
! MODEL PARAMETERS
!------------------------------------------------------------------------------------
F_STATIC      4035.99 ; kg ! Total (left + right) tire load [I]
KTIRE             980 ; N/mm ! Vertical spring rate for one tire [I]
LSPRING           890 ; mm ! Distance between suspension springs [I]
LTRACK           2030 ; mm ! Track width [I]
MUS               570 ; kg ! Unsprung mass of axle/suspension (both sides) [I]

!------------------------------------------------------------------------------------
! SYSTEM CONSTANTS
!------------------------------------------------------------------------------------
! DR      57.29577951 ; - ! Deg/rad symbol to use in formulas (read-only)
! G           9.80665 ; - ! Symbol for gravity constant m/s/s (read-only)
! PI      3.141592654 ; - ! Symbol for PI to use in formulas (read-only)
! ZERO              0 ; - ! Symbol for zero to use in VS Events (read-only)

!------------------------------------------------------------------------------------
! CONFIGURABLE FUNCTIONS
!------------------------------------------------------------------------------------

! FS_COMP: Compression (upper) envelope of suspension spring force (1 side) as a
! function of deflection. Spring force is a function of deflection (COEFFICIENT or
! TABLE). Spring force from the calculation can be adjusted with FS_COMP_GAIN and
! FS_COMP_OFFSET. An inverse version of this function is used internally. The
! derivative of this function is used internally.

FS_COMP_COEFFICIENT 250 ! Coefficient: spring force per unit deflection (N/mm)
FS_COMP_GAIN        1 ! Gain multiplied with calculated value to get spring force
FS_COMP_OFFSET   2000 ; N ! Offset added (after gain) to get spring force

! FS_EXT: Extension (lower) envelope of suspension spring force (1 side) as a
! function of deflection. Spring force is a function of deflection (COEFFICIENT or
! TABLE). Spring force from the calculation can be adjusted with FS_EXT_GAIN and
! FS_EXT_OFFSET. An inverse version of this function is used internally. The
! derivative of this function is used internally.

FS_EXT_COEFFICIENT 250 ! Coefficient: spring force per unit deflection (N/mm)
FS_EXT_GAIN         1 ! Gain multiplied with calculated value to get spring force
FS_EXT_OFFSET   -2000 ; N ! Offset added (after gain) to get spring force

! MX_TOTAL: Total roll moment applied to axle via tires as a function of ground
! roll. Column 1 = roll (deg). Column 2 = moment (N-m).. Moment is a function of roll
! angle (CONSTANT, COEFFICIENT, or TABLE). Moment from the calculation can be
! adjusted with MX_TOTAL_GAIN and MX_TOTAL_OFFSET. The derivative of this function is
! used internally.

! 1D table: col 1 = roll angle (deg), col 2 = moment (N-m)
MX_TOTAL_TABLE LINEAR ! linear interpolation and extrapolation
 -1.43, -10179
 -1.33, -9341
 -1.23, -8512.7
 -1.13, -7691.9
 -1.03, -6876.7
 -0.935, -6106.1
 -0.835, -5298.1
 -0.735, -4492.5
 -0.635, -3688.7
 -0.535, -2886.2
 -0.435, -2084.7
 -0.335, -1283.9
 -0.235, -484.39
 -0.135, 314.93
 -0.0346, 1117.2
 0.0654, 1916.1
 0.165, 2711.6
 0.265, 3510
 0.365, 4309.7
 0.465, 5105.6
 0.565, 5903.6
 0.665, 6702.3
 0.765, 7502.8
 0.865, 8303.3
 0.965, 9099.8
 1.07, 9936.8
 1.17, 10737
 1.27, 11533
 1.37, 12329
ENDTABLE
MX_TOTAL_GAIN       1 ! Gain multiplied with calculated value to get moment
MX_TOTAL_OFFSET     0 ; N-m ! Offset added (after gain) to get moment


END
