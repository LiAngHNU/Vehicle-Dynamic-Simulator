function [y1] = myNeuralNetworkFunctionTruckSim(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 09-Sep-2022 11:08:25.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 3xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.21707676702791;179.999964197927;39.9651251861263];
x1_step1.gain = [1.56483762155764;105.171321212506;43.4657649018849];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.3142322926888956314;0.41395405324052875207;3.650009209195436366;-4.1860499231686052468;-0.50879623945193841461;1.1342941691807262306;-8.5492241163127697945;-8.1608050472985631529;0.31522831511563920159;5.1324514107074001856];
IW1_1 = [2.968546073902671889 0.80440873830259007615 0.048977788791570317506;1.1003897292074951153 -0.17012200887873907273 0.36215912756305612685;-3.3661549695881838318 0.45594976658953140225 -1.8151072272676318509;4.1008726805847688368 2.6150860089052669899 6.1222181476908916764;1.5159554121351674905 -0.1568354681577340537 0.4648211254589256769;-0.91476789915151723864 0.079172731836065379785 -0.36851237393498403883;13.118035938249038352 8.1041948339645770716 7.1664966785685377815;6.9538976725520473821 6.7866869630293154003 15.733947943668471936;-0.81296610655549950142 0.22690224014423626686 -0.013437768403186464358;-10.574159567257087389 -4.9000287389751067124 -0.75340706521763478598];

% Layer 2
b2 = [0.57300670822358967804;0.2804013467227218781;-0.99409980481534443442];
LW2_1 = [-4.1233787230219085375e-05 -0.045527588176092578798 4.6850823231406426572 -3.3782356713306733731 -0.10450655397620516041 -0.53541505046759496622 -11.866160043713097849 12.482395664330597995 -0.040801421391637185399 -8.5960590480645233669;-1.2436447399597496677 0.69866984351960681465 -0.12208772711812072853 -0.15915002883150625168 0.75660159683565897382 -0.34008079632315391105 -0.22892837482869221599 -0.24009106001689153875 -0.28879918617314243034 0.041334589604207570834;0.93638522528598688854 1.2090058165238262156 -0.097999854867659719204 -0.085895786063983167735 -1.5304782876083156129 0.22923897128274417501 0.23080318828572254919 0.032329772677425018534 0.30074469872622200395 -0.010566460433643298095];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.179951020506208;466.107023499393;33.0898744937883];
y1_step1.xoffset = [-11.1141353595769;-0.00411428968481611;-0.0140952357128299];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
